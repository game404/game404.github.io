<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>http on 游戏不存在</title>
    <link>https://game404.github.io/tags/http/</link>
    <description>Recent content in http on 游戏不存在</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>game404</copyright>
    <lastBuildDate>Sun, 09 Jan 2022 23:33:30 +0800</lastBuildDate>
    
	<atom:link href="https://game404.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>httpbin源码解析</title>
      <link>https://game404.github.io/post/python/httpbin/</link>
      <pubDate>Sun, 09 Jan 2022 23:33:30 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/httpbin/</guid>
      <description>httpbin是requests作者Kenneth Reitz的项目，是一个使用flask制作的http协议演示项目。学习这个项目，我们大概可</description>
    </item>
    
    <item>
      <title>Werkzeug源码阅读-完结篇</title>
      <link>https://game404.github.io/post/python/werkzeug-3/</link>
      <pubDate>Thu, 17 Jun 2021 22:39:20 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/werkzeug-3/</guid>
      <description>Werkzeug是一个全面的WSGI Web应用程序库。它最初是WSGI实用程序各种工具的简单集合，现已成为最高级的WSGI实用程序库之一，是</description>
    </item>
    
    <item>
      <title>Werkzeug 源码阅读-下</title>
      <link>https://game404.github.io/post/python/werkzeug-2/</link>
      <pubDate>Thu, 03 Jun 2021 23:37:07 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/werkzeug-2/</guid>
      <description>Werkzeug是一个全面的WSGI Web应用程序库。它最初是WSGI实用程序各种工具的简单集合，现已成为最高级的WSGI实用程序库之一，是</description>
    </item>
    
    <item>
      <title>Werkzeug 源码阅读-上</title>
      <link>https://game404.github.io/post/python/werkzeug-1/</link>
      <pubDate>Fri, 28 May 2021 00:35:13 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/werkzeug-1/</guid>
      <description>Werkzeug是一个全面的WSGI Web应用程序库。它最初是WSGI实用程序各种工具的简单集合，现已成为最高级的WSGI实用程序库之一，是</description>
    </item>
    
    <item>
      <title>Requests源码v0.2阅读</title>
      <link>https://game404.github.io/post/python/requests-v0.2/</link>
      <pubDate>Thu, 08 Apr 2021 23:23:38 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/requests-v0.2/</guid>
      <description>前文[一步一步实现web服务器]介绍过 历史对比法 : 对比代码的需求变化和版本历史，从而学习需求如何被实现。今天我们一起从 requests 源码开始，使用 历史对</description>
    </item>
    
    <item>
      <title>python http 源码阅读</title>
      <link>https://game404.github.io/post/python/http/</link>
      <pubDate>Thu, 28 Jan 2021 22:13:45 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/http/</guid>
      <description>上篇文章在阅读bottle源码时候，没有详细介绍bottle如何处理http请求，这需要先阅读python-http源码。本周我们一起看看p</description>
    </item>
    
    <item>
      <title>requests 源码阅读</title>
      <link>https://game404.github.io/post/python/requests/</link>
      <pubDate>Sun, 17 Jan 2021 08:31:48 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/requests/</guid>
      <description>requests是一个简洁易用的http-client库，早期在github的python项目受欢迎程度可以排名TOP10。介绍这个项目，我</description>
    </item>
    
  </channel>
</rss>