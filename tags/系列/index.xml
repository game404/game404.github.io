<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>系列 on 游戏不存在</title>
    <link>https://game404.github.io/tags/%E7%B3%BB%E5%88%97/</link>
    <description>Recent content in 系列 on 游戏不存在</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>game404</copyright>
    <lastBuildDate>Thu, 13 Jun 2019 22:34:06 +0800</lastBuildDate>
    
	<atom:link href="https://game404.github.io/tags/%E7%B3%BB%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>从docker到istio之四 - istio管理应用</title>
      <link>https://game404.github.io/post/docker2istio-istio/</link>
      <pubDate>Thu, 13 Jun 2019 22:34:06 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-istio/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>从docker到istio之三 - kubernetes集群编排</title>
      <link>https://game404.github.io/post/docker2istio-kubernetes/</link>
      <pubDate>Wed, 22 May 2019 22:39:33 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-kubernetes/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>从docker到istio之二 - 使用compose部署应用</title>
      <link>https://game404.github.io/post/docker2istio-compose/</link>
      <pubDate>Wed, 22 May 2019 22:39:33 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-compose/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>从docker到istio之一 - 使用Docker将应用容器化</title>
      <link>https://game404.github.io/post/docker2istio-docker/</link>
      <pubDate>Fri, 17 May 2019 22:39:33 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-docker/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>更换docker日志驱动</title>
      <link>https://game404.github.io/post/docker-syslog/</link>
      <pubDate>Wed, 01 May 2019 23:47:16 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker-syslog/</guid>
      <description>在之前的两篇文章: Docker容器日志分析 介绍过docker的json日志策略; fluentd收集kubernetes 集群日志分析 分析kub</description>
    </item>
    
    <item>
      <title>fluentd收集kubernetes 集群日志分析</title>
      <link>https://game404.github.io/post/k8s-fluentd-logging/</link>
      <pubDate>Sat, 13 Apr 2019 05:23:47 +0800</pubDate>
      
      <guid>https://game404.github.io/post/k8s-fluentd-logging/</guid>
      <description>EFK (Elasticsearch + Fluentd + Kibana) 是kubernetes官方推荐的日志收集方案，我们一起了解一下fluentd是如何收集kubernetes集群日志的，庆祝一下f</description>
    </item>
    
    <item>
      <title>Docker容器日志分析</title>
      <link>https://game404.github.io/post/docker-log/</link>
      <pubDate>Sun, 24 Mar 2019 18:41:26 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker-log/</guid>
      <description>Docker容器日志分析 查看容器日志 先使用 docker run -it --rm -d -p 80:80 nginx:1.15.8-alpine 命令启动一个nginx容器。如果没有异常，会得到容器ID如 d2408a7931c95a3a83ffeca2fba887763cf925a67890ef3be4d9ff838aa25b00 的长串。再使用 curl -i http://127.0.0.1 访</description>
    </item>
    
  </channel>
</rss>