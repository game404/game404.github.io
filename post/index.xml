<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 游戏不存在</title>
    <link>https://game404.github.io/post/</link>
    <description>Recent content in Posts on 游戏不存在</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>game404</copyright>
    <lastBuildDate>Mon, 25 Oct 2021 21:19:23 +0800</lastBuildDate>
    
	<atom:link href="https://game404.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>神器 celery 源码解析 - 3</title>
      <link>https://game404.github.io/post/python/celery-3/</link>
      <pubDate>Mon, 25 Oct 2021 21:19:23 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/celery-3/</guid>
      <description>Celery是一款非常简单、灵活、可靠的分布式系统，可用于处理大量消息，并且提供了一整套操作此系统的工具。Celery 也是一款消息队列工具，</description>
    </item>
    
    <item>
      <title>神器 celery 源码解析 - 2 </title>
      <link>https://game404.github.io/post/python/celery-2/</link>
      <pubDate>Mon, 11 Oct 2021 22:10:53 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/celery-2/</guid>
      <description>Celery是一款非常简单、灵活、可靠的分布式系统，可用于处理大量消息，并且提供了一整套操作此系统的工具。Celery 也是一款消息队列工具，</description>
    </item>
    
    <item>
      <title>celery 源码阅读 - 1</title>
      <link>https://game404.github.io/post/python/celery-1/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:31 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/celery-1/</guid>
      <description>Celery是一款非常简单、灵活、可靠的分布式系统，可用于处理大量消息，并且提供了一整套操作此系统的工具。Celery 是一款消息队列工具，可</description>
    </item>
    
    <item>
      <title>kubernetes 初体验-mac版</title>
      <link>https://game404.github.io/post/mac-desktop-kubernetes/</link>
      <pubDate>Fri, 10 Sep 2021 00:04:10 +0800</pubDate>
      
      <guid>https://game404.github.io/post/mac-desktop-kubernetes/</guid>
      <description>之前在mac上体验kubernetes要使用minikube，最近发现Docker-Desktop自带的k8s更方便，简单记录一下安装过程。</description>
    </item>
    
    <item>
      <title>python 对象杂谈</title>
      <link>https://game404.github.io/post/python/python-object-and-dict/</link>
      <pubDate>Thu, 02 Sep 2021 21:50:56 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/python-object-and-dict/</guid>
      <description>需求 老实说，单纯的研究语言细节，比较无趣且容易忘记。这次的研究，起源于一个业务场景的需求，跟着场景需求深入语言细节更容易理解和记忆。 我们有一</description>
    </item>
    
    <item>
      <title>requests项目如何使用pytest进行单元测试</title>
      <link>https://game404.github.io/post/python/requests-test/</link>
      <pubDate>Thu, 26 Aug 2021 19:52:59 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/requests-test/</guid>
      <description>pytest是python的单元测试框架，简单易用，在很多知名项目中应用。requests是python知名的http爬虫库，同样简单易用，</description>
    </item>
    
    <item>
      <title>pytest 简易指南</title>
      <link>https://game404.github.io/post/python/pytest/</link>
      <pubDate>Thu, 22 Jul 2021 22:50:22 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/pytest/</guid>
      <description>pytest是一个单元测试框架，可以帮助写出更优质的程序。flask， werkzeug，gunicorn 等项目中都使用它，本文一起学习如何使</description>
    </item>
    
    <item>
      <title>Flask 源码阅读-下篇</title>
      <link>https://game404.github.io/post/python/flask-2/</link>
      <pubDate>Thu, 22 Jul 2021 22:50:13 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/flask-2/</guid>
      <description>flask项目大名鼎鼎，不需要多做介绍。我把它称之为python服务开发的TOP2项目，另外一个就是django。这两个项目各有千秋，各自有</description>
    </item>
    
    <item>
      <title>Flask 源码阅读-正菜</title>
      <link>https://game404.github.io/post/python/flask-1/</link>
      <pubDate>Fri, 02 Jul 2021 00:03:55 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/flask-1/</guid>
      <description>flask项目大名鼎鼎，不需要多做介绍。我把它称之为python服务开发的TOP2项目，另外一个就是django。这两个项目各有千秋，各自有</description>
    </item>
    
    <item>
      <title>Flask 源码阅读-开胃菜</title>
      <link>https://game404.github.io/post/python/flask-0/</link>
      <pubDate>Thu, 24 Jun 2021 23:37:06 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/flask-0/</guid>
      <description>flask项目大名鼎鼎，应该不需要多做介绍了吧。我把它称之为python服务开发的TOP2项目，另外一个就是django了，不需要比较孰优孰</description>
    </item>
    
    <item>
      <title>Werkzeug源码阅读-完结篇</title>
      <link>https://game404.github.io/post/python/werkzeug-3/</link>
      <pubDate>Thu, 17 Jun 2021 22:39:20 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/werkzeug-3/</guid>
      <description>Werkzeug是一个全面的WSGI Web应用程序库。它最初是WSGI实用程序各种工具的简单集合，现已成为最高级的WSGI实用程序库之一，是</description>
    </item>
    
    <item>
      <title>Werkzeug 源码阅读-下</title>
      <link>https://game404.github.io/post/python/werkzeug-2/</link>
      <pubDate>Thu, 03 Jun 2021 23:37:07 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/werkzeug-2/</guid>
      <description>Werkzeug是一个全面的WSGI Web应用程序库。它最初是WSGI实用程序各种工具的简单集合，现已成为最高级的WSGI实用程序库之一，是</description>
    </item>
    
    <item>
      <title>Werkzeug 源码阅读-上</title>
      <link>https://game404.github.io/post/python/werkzeug-1/</link>
      <pubDate>Fri, 28 May 2021 00:35:13 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/werkzeug-1/</guid>
      <description>Werkzeug是一个全面的WSGI Web应用程序库。它最初是WSGI实用程序各种工具的简单集合，现已成为最高级的WSGI实用程序库之一，是</description>
    </item>
    
    <item>
      <title>再聊我的源码阅读方法-xmlrpc源码慢读</title>
      <link>https://game404.github.io/post/python/xmlrpc-server-slow/</link>
      <pubDate>Thu, 20 May 2021 23:13:57 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/xmlrpc-server-slow/</guid>
      <description>之前介绍我的源码阅读方法，有粉丝朋友说很有帮助，认为是授人予鱼。这是过誉了，也让我很受鼓舞，这次带来另外一种阅读方法，希望对大家也有帮助。 在</description>
    </item>
    
    <item>
      <title>PyPy真的能让python比c还快？</title>
      <link>https://game404.github.io/post/python/pypy-1/</link>
      <pubDate>Tue, 11 May 2021 22:41:31 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/pypy-1/</guid>
      <description>最近 “pypy为什么能让python比c还快” 刷屏了，原文讲的内容偏理论，干货比较少。我们可以再深入一点点，了解pypy的真相。 正式开始之前</description>
    </item>
    
    <item>
      <title>xmlrpc源码阅读</title>
      <link>https://game404.github.io/post/python/xmlrpc/</link>
      <pubDate>Thu, 06 May 2021 21:08:30 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/xmlrpc/</guid>
      <description>XML-RPC 是一种远程过程调用方法，它使用通过 HTTP 传递的 XML 作为载体。 有了它，客户端可以在远程服务器上调用带参数的服务器方法（服务器以 URI 命名）并获取结构化</description>
    </item>
    
    <item>
      <title>SQLAlchemy源码阅读-下篇</title>
      <link>https://game404.github.io/post/python/sqlalchemy-part-2/</link>
      <pubDate>Thu, 29 Apr 2021 22:38:13 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/sqlalchemy-part-2/</guid>
      <description>SQLAlchemy是Python SQL工具箱和ORM框架，它为应用程序开发人员提供了全面而灵活的SQL功能。它提供了一整套企业级持久化方案</description>
    </item>
    
    <item>
      <title>Python 冷兵器合集</title>
      <link>https://game404.github.io/post/python/python-core-tools/</link>
      <pubDate>Thu, 22 Apr 2021 21:27:47 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/python-core-tools/</guid>
      <description>python中自带了一些命令行工具，可以用来快速处理一些工作。我把这些命令行工具称之为 冷兵器 ，没有趁手的工具时候就可以顶替使用。这些工具都是</description>
    </item>
    
    <item>
      <title>SQLAlchemy源码阅读-上篇</title>
      <link>https://game404.github.io/post/python/sqlalchemy-part-1/</link>
      <pubDate>Sat, 17 Apr 2021 10:05:57 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/sqlalchemy-part-1/</guid>
      <description>SQLAlchemy是Python SQL工具箱和ORM框架，它为应用程序开发人员提供了全面而灵活的SQL功能。它提供了一整套企业级持久化方案</description>
    </item>
    
    <item>
      <title>Python虚拟环境指南2021版本</title>
      <link>https://game404.github.io/post/python-env-2021/</link>
      <pubDate>Sun, 11 Apr 2021 07:28:50 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python-env-2021/</guid>
      <description>又到了一年一度的python虚拟环境指南发布的时刻。这是python虚拟环境指南的第三篇，之前的两篇是: Python虚拟环境指南2020版 P</description>
    </item>
    
    <item>
      <title>Requests源码v0.2阅读</title>
      <link>https://game404.github.io/post/python/requests-v0.2/</link>
      <pubDate>Thu, 08 Apr 2021 23:23:38 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/requests-v0.2/</guid>
      <description>前文[一步一步实现web服务器]介绍过 历史对比法 : 对比代码的需求变化和版本历史，从而学习需求如何被实现。今天我们一起从 requests 源码开始，使用 历史对</description>
    </item>
    
    <item>
      <title>一步一步实现web服务器</title>
      <link>https://game404.github.io/post/python/web-serv/</link>
      <pubDate>Thu, 01 Apr 2021 22:12:37 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/web-serv/</guid>
      <description>本次代码阅读的项目来自 500lines 的子项目 web-server。 500 Lines or Less不仅是一个项目，也是一本同名书，有源码，也有文字介绍。这个项目由多个独立</description>
    </item>
    
    <item>
      <title>不一样的docker操作</title>
      <link>https://game404.github.io/post/python/docker-py/</link>
      <pubDate>Thu, 25 Mar 2021 23:27:04 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/docker-py/</guid>
      <description>docker-py是Docker SDK for Python。docker-py主要利用了requests，使用http/socket协议连接本地的do</description>
    </item>
    
    <item>
      <title>一文打尽python-web开发的signal机制</title>
      <link>https://game404.github.io/post/python/blinker/</link>
      <pubDate>Thu, 18 Mar 2021 22:34:49 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/blinker/</guid>
      <description>signal在flask/django中都是很重要的解耦手段。flask的signal依赖blinker实现，django的signal也很</description>
    </item>
    
    <item>
      <title>python 模版引擎 Mako 源码阅读</title>
      <link>https://game404.github.io/post/python/mako/</link>
      <pubDate>Thu, 11 Mar 2021 23:43:34 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/mako/</guid>
      <description>Mako 是用Python编写的模板引擎。从概念上讲，mako是一种嵌入式Python（即Python Server Page）语言，模版被编译成Python代码</description>
    </item>
    
    <item>
      <title>python logging 源码阅读</title>
      <link>https://game404.github.io/post/python/logging/</link>
      <pubDate>Thu, 04 Mar 2021 23:22:39 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/logging/</guid>
      <description>python logging 源码阅读 python logging 模块实现了灵活的日志系统。整个模块仅仅3个类，不到5000行代码的样子，学习它可以加深对程序日志的了解，本文分下面几个部分:</description>
    </item>
    
    <item>
      <title>Gunicorn 源码阅读</title>
      <link>https://game404.github.io/post/python/gunicorn/</link>
      <pubDate>Wed, 24 Feb 2021 20:01:29 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/gunicorn/</guid>
      <description>gunicorn “Green Unicorn”，脱胎于ruby社区的Unicorn，是一个 WSGI HTTP Server。学习gunicorn后，我们可以把之前的 Bottle 程序正</description>
    </item>
    
    <item>
      <title>python tinydb 源码阅读</title>
      <link>https://game404.github.io/post/python/tinydb/</link>
      <pubDate>Wed, 17 Feb 2021 22:14:27 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/tinydb/</guid>
      <description>TinyDB是一个小型，简单易用，面向文档的数据库；代码仅1800行，纯python编写。TinyDB项目大小刚好，学习它可以了解NOSQL</description>
    </item>
    
    <item>
      <title>python argparse 源码阅读</title>
      <link>https://game404.github.io/post/python/argparse/</link>
      <pubDate>Thu, 11 Feb 2021 21:36:27 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/argparse/</guid>
      <description>http.server 可以使用 -h 查看帮助。这种自定义的命令行工具对用户使用程序非常有帮助，我们一起学习是如何实现命令工具的。 先看看展示: 1 2 3 4 5 6 7 8 9 10 11 12</description>
    </item>
    
    <item>
      <title>python wsgiref 源码阅读</title>
      <link>https://game404.github.io/post/python/wsgiref/</link>
      <pubDate>Thu, 04 Feb 2021 22:13:53 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/wsgiref/</guid>
      <description>python web开发中http请求的处理流程通常是: web-browser &amp;lt;-&amp;gt; web-server &amp;lt;-&amp;gt; wsgi &amp;lt;-&amp;gt; web-application， 我们学习过基于bottle实现的web-applic</description>
    </item>
    
    <item>
      <title>python http 源码阅读</title>
      <link>https://game404.github.io/post/python/http/</link>
      <pubDate>Thu, 28 Jan 2021 22:13:45 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/http/</guid>
      <description>上篇文章在阅读bottle源码时候，没有详细介绍bottle如何处理http请求，这需要先阅读python-http源码。本周我们一起看看p</description>
    </item>
    
    <item>
      <title>Bottle 源码阅读</title>
      <link>https://game404.github.io/post/python/bottle/</link>
      <pubDate>Thu, 21 Jan 2021 22:46:56 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/bottle/</guid>
      <description>bottle是一个简单的python-web服务框架，可以和其它WSGI服务组合提供web服务。它最大的特色是所有代码都在单个文件中，这样限</description>
    </item>
    
    <item>
      <title>requests 源码阅读</title>
      <link>https://game404.github.io/post/python/requests/</link>
      <pubDate>Sun, 17 Jan 2021 08:31:48 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/requests/</guid>
      <description>requests是一个简洁易用的http-client库，早期在github的python项目受欢迎程度可以排名TOP10。介绍这个项目，我</description>
    </item>
    
    <item>
      <title>Redis-py 源码阅读</title>
      <link>https://game404.github.io/post/python/redis-py/</link>
      <pubDate>Sat, 09 Jan 2021 21:37:12 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python/redis-py/</guid>
      <description>redis协议规范 redis-py概述 redis-py基础使用 RedisCommand Redis连接 连接池 pipeline LuaScript lock redis协议规范 RESP（Redis Serialization Proto</description>
    </item>
    
    <item>
      <title>Python虚拟环境指南2020版</title>
      <link>https://game404.github.io/post/python-env-2020/</link>
      <pubDate>Sat, 21 Mar 2020 23:10:57 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python-env-2020/</guid>
      <description>这是python虚拟环境指南的第二篇，第一篇请见 Python虚拟环境指南2019版 。 合理的python虚拟环境让让开发更有序和高效。关于虚拟</description>
    </item>
    
    <item>
      <title>Django Rbac 权限设计</title>
      <link>https://game404.github.io/post/django-rbac-permission-design/</link>
      <pubDate>Sun, 08 Dec 2019 23:34:12 +0800</pubDate>
      
      <guid>https://game404.github.io/post/django-rbac-permission-design/</guid>
      <description>Django Rbac 权限设计 相关概念 ACL ACL 是 Access Control List 的缩写，称为访问控制列表，包含了对一个对象或一条记录可进行何种操作的权限定义。 例如一个文件对象的 ACL 为 { &amp;ldquo;Alice&amp;rdquo;: { &amp;ldquo;read&amp;rdquo;:</description>
    </item>
    
    <item>
      <title>Celery 指南 - 1</title>
      <link>https://game404.github.io/post/celery-1/</link>
      <pubDate>Sat, 28 Sep 2019 23:43:53 +0800</pubDate>
      
      <guid>https://game404.github.io/post/celery-1/</guid>
      <description>celery是什么 Celery 通过消息机制进行通信，通常使用中间人（Broker）作为客户端和职程（Worker）调节。启动一个任务，客户端向消息队列</description>
    </item>
    
    <item>
      <title>python从零到壹</title>
      <link>https://game404.github.io/post/python021/</link>
      <pubDate>Sat, 14 Sep 2019 22:16:48 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python021/</guid>
      <description>python从零到壹 1. 基础要求 起点 前3差数学；后3差经验；天赋决定天花板；任何起点都可以开始python 江湖图谱 丐帮玩蛇，天下一绝； 学习最重</description>
    </item>
    
    <item>
      <title>Jupyter Notebook 使用入门</title>
      <link>https://game404.github.io/post/jupyter-simple/</link>
      <pubDate>Mon, 29 Jul 2019 00:14:49 +0800</pubDate>
      
      <guid>https://game404.github.io/post/jupyter-simple/</guid>
      <description>Jupyter Notebook 使用入门 Jupyter Notebook官方介绍是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。简单的</description>
    </item>
    
    <item>
      <title>从docker到istio之四 - istio管理应用</title>
      <link>https://game404.github.io/post/docker2istio-istio/</link>
      <pubDate>Thu, 13 Jun 2019 22:34:06 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-istio/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>从docker到istio之三 - kubernetes集群编排</title>
      <link>https://game404.github.io/post/docker2istio-kubernetes/</link>
      <pubDate>Wed, 22 May 2019 22:39:33 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-kubernetes/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>从docker到istio之二 - 使用compose部署应用</title>
      <link>https://game404.github.io/post/docker2istio-compose/</link>
      <pubDate>Wed, 22 May 2019 22:39:33 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-compose/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>从docker到istio之一 - 使用Docker将应用容器化</title>
      <link>https://game404.github.io/post/docker2istio-docker/</link>
      <pubDate>Fri, 17 May 2019 22:39:33 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker2istio-docker/</guid>
      <description>前言 容器化，云原生越演越烈，新概念非常之多。信息爆炸的同时，带来层层迷雾。我尝试从扩容出发理解其脉路，经过实践探索，整理形成一个入门教程，包</description>
    </item>
    
    <item>
      <title>更换docker日志驱动</title>
      <link>https://game404.github.io/post/docker-syslog/</link>
      <pubDate>Wed, 01 May 2019 23:47:16 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker-syslog/</guid>
      <description>在之前的两篇文章: Docker容器日志分析 介绍过docker的json日志策略; fluentd收集kubernetes 集群日志分析 分析kub</description>
    </item>
    
    <item>
      <title>Go 优秀库推荐 - 命令行工具 cobra</title>
      <link>https://game404.github.io/post/go-cli-command/</link>
      <pubDate>Mon, 22 Apr 2019 00:29:00 +0800</pubDate>
      
      <guid>https://game404.github.io/post/go-cli-command/</guid>
      <description>spf13/cobra 和 urfave/cli 是Go的2个优秀命令行工具： 名称 star 简介 应用项目 spf13/cobra 11571 A Commander for modern Go CLI interactions docker, kubernetes, istio， hugo &amp;hellip; urfave/cli 10501 A simple, fast, and fun package for building command line apps in Go drone, peach, gogs &amp;hellip; 两个项目的简</description>
    </item>
    
    <item>
      <title>Python 生成微信头图</title>
      <link>https://game404.github.io/post/blackhole/</link>
      <pubDate>Mon, 15 Apr 2019 00:26:09 +0800</pubDate>
      
      <guid>https://game404.github.io/post/blackhole/</guid>
      <description>前两天我的朋友肖和我说 “完啦完啦，现在微信公众号没法弄了”。我就纳闷了，问她怎么回事。她告诉我 “黑洞图片事件你不知道，好多微信公众号号都有被</description>
    </item>
    
    <item>
      <title>fluentd收集kubernetes 集群日志分析</title>
      <link>https://game404.github.io/post/k8s-fluentd-logging/</link>
      <pubDate>Sat, 13 Apr 2019 05:23:47 +0800</pubDate>
      
      <guid>https://game404.github.io/post/k8s-fluentd-logging/</guid>
      <description>EFK (Elasticsearch + Fluentd + Kibana) 是kubernetes官方推荐的日志收集方案，我们一起了解一下fluentd是如何收集kubernetes集群日志的，庆祝一下f</description>
    </item>
    
    <item>
      <title>在kubernetes集群中部署open-falcon</title>
      <link>https://game404.github.io/post/kubernetes-open-falcon-deploy/</link>
      <pubDate>Mon, 08 Apr 2019 23:46:25 +0800</pubDate>
      
      <guid>https://game404.github.io/post/kubernetes-open-falcon-deploy/</guid>
      <description>公司最近监控系统从zabbix切换到open-falcon,需要将open-falcon部署到私有的kubernetes集群上。open-f</description>
    </item>
    
    <item>
      <title>Python虚拟环境指南2019版</title>
      <link>https://game404.github.io/post/python-env-2019/</link>
      <pubDate>Sat, 06 Apr 2019 03:29:53 +0800</pubDate>
      
      <guid>https://game404.github.io/post/python-env-2019/</guid>
      <description>这是一篇旧文，编写于2017年，用于公司内部交流。整理更新后于2019年04月06日重发，内容有效期乐观估计半年，阅读请注意保质期。 为什么用</description>
    </item>
    
    <item>
      <title>kubernetes 1.14 升级指南</title>
      <link>https://game404.github.io/post/kubernetes-1.14-upgrade-guide/</link>
      <pubDate>Thu, 28 Mar 2019 23:28:08 +0800</pubDate>
      
      <guid>https://game404.github.io/post/kubernetes-1.14-upgrade-guide/</guid>
      <description>一点题外话：kubernetes官方3月25号发布1.14，本文28号完成。1.14升级安装中文指南，目前全网大概最新吧，支持请赏个赞。 升级</description>
    </item>
    
    <item>
      <title>kubernetes 1.13 安装指南</title>
      <link>https://game404.github.io/post/kubernetes-1.13-guide/</link>
      <pubDate>Tue, 26 Mar 2019 23:27:54 +0800</pubDate>
      
      <guid>https://game404.github.io/post/kubernetes-1.13-guide/</guid>
      <description>kubernetes官方提供了中文文档，网上也有不少中文教程，可是实际的安装过程中，还是遇到了不少的坑。主要有： kubernetes的版本迭</description>
    </item>
    
    <item>
      <title>Docker容器日志分析</title>
      <link>https://game404.github.io/post/docker-log/</link>
      <pubDate>Sun, 24 Mar 2019 18:41:26 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker-log/</guid>
      <description>Docker容器日志分析 查看容器日志 先使用 docker run -it --rm -d -p 80:80 nginx:1.15.8-alpine 命令启动一个nginx容器。如果没有异常，会得到容器ID如 d2408a7931c95a3a83ffeca2fba887763cf925a67890ef3be4d9ff838aa25b00 的长串。再使用 curl -i http://127.0.0.1 访</description>
    </item>
    
    <item>
      <title>Docker镜像时区设置</title>
      <link>https://game404.github.io/post/docker-timezone/</link>
      <pubDate>Sun, 17 Mar 2019 18:25:24 +0800</pubDate>
      
      <guid>https://game404.github.io/post/docker-timezone/</guid>
      <description>alpine系统时区设置 我们先使用docker run -it --name alpine_test --rm alpine:3.9 sh命令启动一个alpine系统。 查看系统时间: 1 2 3 4 # echo $TZ # date Mon Mar 11 10:47:20 UTC 2019 看到</description>
    </item>
    
  </channel>
</rss>